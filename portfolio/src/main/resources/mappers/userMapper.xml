<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ajs.portfolio.dao.UserDao">
	<select id="getUser" resultType="kr.ajs.portfolio.vo.UserVo">
		select * from user where userId = #{id} and userIsOut = "N"
	</select>
	<insert id="signUp">
		insert into user (userId, userPw, userMail) values(#{user.userId}, #{user.userPw}, #{user.userMail})
	</insert>
	<select id="getGoodsList" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select * from goods join post on goodsNum=postnum where postIsDel = 'N'
		<if test="type==1">
			and goodsType = '1'
		</if>
		<if test="type==2">
			and goodsType = '2'
		</if>
		<if test="type==3">
			and goodsType = '3'
		</if>
		<if test="type==4">
			and goodsType = '4'
		</if>
		order by goodsNum desc limit #{cri.pageStart}, #{cri.perPageNum};
	</select>
	<select id="getGoodsTotalCount" resultType="int">
		select count(*) from goods join post on goodsNum=postnum where postIsDel = 'N'
		<if test="type==1">
			and goodsType = '1'
		</if>
		<if test="type==2">
			and goodsType = '2'
		</if>
		<if test="type==3">
			and goodsType = '3'
		</if>
		<if test="type==4">
			and goodsType = '4'
		</if>
	</select>
	<select id="getGoods" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select * from goods where goodsNum = #{num}
	</select>
	<select id="getPost" resultType="kr.ajs.portfolio.vo.PostVo">
		select * from post where post_goodsNum = #{num}
	</select>
	<select id="getOptionList" resultType="kr.ajs.portfolio.vo.OptionVo">
		select * from portfolio.option where option_goodsNum = #{num} and optionIsDel = 'N'
	</select>
	<select id="getWishList" resultType="kr.ajs.portfolio.vo.WishListVo">
		select * from wishlist where wishList_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods})
		and wishList_userId = #{user.userId}
		and wishList_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color})
	</select>
	<insert id="addWishList">
		insert into wishlist (wishList_postNum, wishList_userId, wishListCount, wishList_optionNum)
		values (
		(select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<select id="getWishListTotalCount" resultType="int">
		select count(*) from wishlist where wishList_userId = #{user.userId}
	</select>
	<select id="getBoardWishList" resultType="kr.ajs.portfolio.vo.BoardWishListVo">
		select wishListNum, wishListCount, goodsName, goodsImg, goodsPrice, optionColor from wishlist
		join post on wishList_postNum = postNum
		join portfolio.option on wishList_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where wishList_userId = #{user.userId}
		and optionIsDel = 'N'
		and postIsDel = 'N'
		order by wishListNum desc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<delete id="deleteWishList">
		delete from wishlist where wishList_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{wishList.goods})
		and wishList_userId = #{user.userId}
		and wishList_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{wishList.goods} and optionColor = #{wishList.color})
	</delete>
	<insert id="addWishListCart">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values (
		(select postNum from post join goods on goodsNum=postNum where goodsName = #{wishList.goods}), #{user.userId}, #{wishList.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{wishList.goods} and optionColor = #{wishList.color}))
	</insert>
	<select id="getBoardCart" resultType="kr.ajs.portfolio.vo.BoardCartVo">
		select cartNum, cartCount, goodsName, goodsImg, postDiscount, goodsPrice, goodsPoint, optionColor from cart
		join post on cart_postNum = postNum
		join portfolio.option on cart_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where cart_userId = #{user.userId}
		and optionIsDel = 'N'
		and postIsDel = 'N'
		order by cartNum desc
	</select>
	<delete id="deleteCartList">
		delete from cart where cart_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{cartList.goods})
		and cart_userId = #{user.userId}
		and cart_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{cartList.goods} and optionColor = #{cartList.color})
	</delete>
	<select id="getCart" resultType="kr.ajs.portfolio.vo.CartVo">
		select * from cart where cart_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods})
		and cart_userId=#{user.userId}
		and cart_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color})
	</select>
	<insert id="addGoodsViewCart">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values ((select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<update id="updateCartCount">
		update cart set cartCount = #{cart.cartCount} where cartNum = #{cart.cartNum};
	</update>
	<select id="getBoardOrder" resultType="kr.ajs.portfolio.vo.BoardCartVo">
		select cartNum, cartCount, goodsName, goodsImg, postDiscount, goodsPrice, goodsPoint, optionColor from cart
		join post on cart_postNum = postNum
		join portfolio.option on cart_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where cartNum = #{order}
		and cart_userId = #{user.userId}
		and optionColor = (select optionColor from cart join portfolio.option on cart_optionNum = optionNum where cartNum = #{order})
		and goodsName = (select goodsName from cart join portfolio.option on cart_optionNum = optionNum join goods on option_goodsNum = goodsNum where cartNum = #{order})
		and postIsDel = 'N'
		order by cartNum desc
	</select>
	<select id="getStock" resultType="int">
		select optionStock from cart join portfolio.option on cart_optionNum = optionNum where cartNum=#{order.orderNum}
	</select>
	
	<insert id="addOrder" parameterType="kr.ajs.portfolio.vo.OrderVo" useGeneratedKeys="true" keyProperty="orderInfo.orderNum">
		insert into portfolio.order (orderSender, orderPw, orderSenderPostCode, orderSenderAddress, orderSenderDetailAddress, orderSenderExtraAddress, orderSenderTel, orderReceiver, orderReceiverPostCode, orderReceiverAddress, orderReceiverDetailAddress, orderReceiverExtraAddress, orderReceiverTel, orderTotalPrice, orderUserId)
		values(#{order.senderName}, #{order.noneMemberPassword}, #{order.sendPostcode}, #{order.sendAddress}, #{order.sendDetailAddress}, #{order.sendExtraAddress}, #{order.sendTel}, #{order.receiverName}, #{order.receivePostcode}, #{order.receiveAddress}, #{order.receiveDetailAddress}, #{order.receiveExtraAddress}, #{order.receiveTel}, #{order.totalPrice}, #{user.userId})
	</insert>
	<update id="updateStock">
		update portfolio.option set optionStock = #{stock} where optionNum = (select cart_optionNum from cart where cartNum = #{order.orderNum})
	</update>
	<insert id="addOrderList"> 
		insert into orderList (orderList_postNum, orderList_orderNum, orderList_optionNum, orderListCount, orderListPrice, orderListUsePoint, orderListPoint)
		values((select cart_postNum from cart where cartNum = #{order.orderNum}), #{index}, (select cart_optionNum from cart where cartNum = #{order.orderNum}), #{order.orderCount}, #{order.orderPrice}, #{order.orderUsePoint}, #{order.orderPoint})
	</insert>
		<insert id="addGoodsViewOrderCart" parameterType="kr.ajs.portfolio.vo.CartVo" useGeneratedKeys="true" keyProperty="cart.cartNum">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values ((select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<delete id="deleteCart">
		delete from cart where cartNum = #{order.orderNum}
	</delete>
	<select id="getOrderList" resultType="kr.ajs.portfolio.vo.OrderVo">
		select orderNum, orderDate, orderState, orderUserId from portfolio.order
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (orderUserId like concat('%',#{cri.search},'%')
				or orderState like concat('%',#{cri.search},'%')
				or orderNum like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where orderNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where orderUserId like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 3">
				where orderState like concat('%',#{cri.search},'%')
			</if>
		</if>
		order by orderNum desc limit #{cri.pageStart}, #{cri.perPageNum};
	</select>
	<select id="getOrderGoodsCount" resultType="int">
		select count(*) from orderList where orderList_orderNum = #{order.orderNum}
	</select>
	<select id="getOrderGoodsName" resultType="String">
		select goodsName from orderList join portfolio.option on orderList_optionNum = optionNum join goods on goodsNum = option_goodsNum where orderList_orderNum = #{order.orderNum} limit 0,1
	</select>
	<select id="getOrderGoodsColor" resultType="String">
		select optionColor from orderList join portfolio.option on orderList_optionNum = optionNum where orderList_orderNum = #{order.orderNum} limit 0,1
	</select>
	<select id="getOrderGoodsList" resultType="kr.ajs.portfolio.vo.OrderListVo">
		select orderListNum, goodsName, goodsImg, optionColor, orderListPrice, orderListCount, orderListUsePoint, goodsType
		from orderlist join portfolio.option on orderList_optionNum = optionNum join goods on option_goodsNum = goodsNum join portfolio.order on orderList_orderNum = orderNum
		where orderList_orderNum = #{orderNum} <if test="user.userAuth!='admin'"> and orderUserId = #{user.userId} </if>
	</select>
	<select id="getOrder" resultType="kr.ajs.portfolio.vo.OrderVo">
		select * from portfolio.order where orderNum = #{orderNum} <if test="user.userAuth!='admin'"> and orderUserId = #{user.userId} </if>
	</select>
	<select id="getOrderViewListTotalCount" resultType="int">
		select count(*) from portfolio.order
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (orderUserId like concat('%',#{cri.search},'%')
				or orderState like concat('%',#{cri.search},'%')
				or orderNum like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where orderNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where orderUserId like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 3">
				where orderState like concat('%',#{cri.search},'%')
			</if>
		</if>
	</select>
	<select id="getAllOrderCount" resultType="int">
		select count(*) from portfolio.order
	</select>
	<select id="getRecallOrderList" resultType="kr.ajs.portfolio.vo.OrderVo">
		<![CDATA[select orderNum, orderSender, orderReceiver, orderDate from portfolio.order
		where orderUserId = #{user.userId}
		and date(orderDate) >= date(subdate(now(), INTERVAL 14 DAY)) and date(orderDate) <= date(now())
		order by orderNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}]]>
	</select>
	<select id="getRecallOrderListCount" resultType="int">
		<![CDATA[select count(*) from portfolio.order
		where orderUserId = #{user.userId}
		and date(orderDate) >= date(subdate(now(), INTERVAL 14 DAY)) and date(orderDate) <= date(now())]]>
	</select>
	<select id="getuserPoint" resultType="int">
		select userPoint from user where userId = #{user.userId}
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ajs.portfolio.dao.UserDao">
	<select id="getUser" resultType="kr.ajs.portfolio.vo.UserVo">
		select * from user where userId = #{id} and userIsOut = "N"
	</select>
	<insert id="signUp">
		insert into user (userId, userPw, userMail) values(#{user.userId}, #{user.userPw}, #{user.userMail})
	</insert>
	<select id="getGoodsList" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select * from goods join post on goodsNum=postnum where postIsDel = 'N'
		<if test="type==1">
			and goodsType = '1'
		</if>
		<if test="type==2">
			and goodsType = '2'
		</if>
		<if test="type==3">
			and goodsType = '3'
		</if>
		<if test="type==4">
			and goodsType = '4'
		</if>
		order by goodsNum desc limit #{cri.pageStart}, #{cri.perPageNum};
	</select>
	<select id="getGoodsTotalCount" resultType="int">
		select count(*) from goods join post on goodsNum=post_goodsNum where postIsDel = 'N'
		<if test="type==1">
			and goodsType = '1'
		</if>
		<if test="type==2">
			and goodsType = '2'
		</if>
		<if test="type==3">
			and goodsType = '3'
		</if>
		<if test="type==4">
			and goodsType = '4'
		</if>
	</select>
	<select id="getGoods" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select * from goods where goodsNum = #{num}
	</select>
	<select id="getPost" resultType="kr.ajs.portfolio.vo.PostVo">
		select * from post where post_goodsNum = #{num}
	</select>
	<select id="getOptionList" resultType="kr.ajs.portfolio.vo.OptionVo">
		select * from portfolio.option where option_goodsNum = #{num} and optionIsDel = 'N'
	</select>
	<select id="getWishList" resultType="kr.ajs.portfolio.vo.WishListVo">
		select * from wishlist where wishList_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods})
		and wishList_userId = #{user.userId}
		and wishList_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color})
	</select>
	<insert id="addWishList">
		insert into wishlist (wishList_postNum, wishList_userId, wishListCount, wishList_optionNum)
		values (
		(select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<select id="getWishListTotalCount" resultType="int">
		select count(*) from wishlist where wishList_userId = #{user.userId}
	</select>
	<select id="getBoardWishList" resultType="kr.ajs.portfolio.vo.BoardWishListVo">
		select wishListNum, wishListCount, goodsName, goodsImg, goodsPrice, optionColor from wishlist
		join post on wishList_postNum = postNum
		join portfolio.option on wishList_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where wishList_userId = #{user.userId}
		and optionIsDel = 'N'
		and postIsDel = 'N'
		order by wishListNum desc limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<delete id="deleteWishList">
		delete from wishlist where wishList_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{wishList.goods})
		and wishList_userId = #{user.userId}
		and wishList_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{wishList.goods} and optionColor = #{wishList.color})
	</delete>
	<insert id="addWishListCart">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values (
		(select postNum from post join goods on goodsNum=postNum where goodsName = #{wishList.goods}), #{user.userId}, #{wishList.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{wishList.goods} and optionColor = #{wishList.color}))
	</insert>
	<select id="getBoardCart" resultType="kr.ajs.portfolio.vo.BoardCartVo">
		select cartNum, cartCount, goodsName, goodsImg, postDiscount, goodsPrice, goodsPoint, optionColor from cart
		join post on cart_postNum = postNum
		join portfolio.option on cart_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where cart_userId = #{user.userId}
		and optionIsDel = 'N'
		and postIsDel = 'N'
		order by cartNum desc
	</select>
	<delete id="deleteCartList">
		delete from cart where cart_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{cartList.goods})
		<if test="user!=null">
			and cart_userId = #{user.userId}
		</if>
		and cart_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{cartList.goods} and optionColor = #{cartList.color})
	</delete>
	<select id="getCart" resultType="kr.ajs.portfolio.vo.CartVo">
		select * from cart where cart_postNum = (select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods})
		and cart_userId=#{user.userId}
		and cart_optionNum = (select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color})
	</select>
	<insert id="addGoodsViewCart">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values ((select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<update id="updateCartCount">
		update cart set cartCount = #{cart.cartCount} where cartNum = #{cart.cartNum};
	</update>
	<select id="getBoardOrder" resultType="kr.ajs.portfolio.vo.BoardCartVo">
		select cartNum, cartCount, goodsName, goodsImg, postDiscount, goodsPrice, goodsPoint, optionColor from cart
		join post on cart_postNum = postNum
		join portfolio.option on cart_optionNum = optionNum 
		join goods on option_goodsNum = goodsNum
		where cartNum = #{order}
		and cart_userId = #{user.userId}
		and optionColor = (select optionColor from cart join portfolio.option on cart_optionNum = optionNum where cartNum = #{order})
		and goodsName = (select goodsName from cart join portfolio.option on cart_optionNum = optionNum join goods on option_goodsNum = goodsNum where cartNum = #{order})
		and postIsDel = 'N'
		order by cartNum desc
	</select>
	<select id="getStock" resultType="int">
		select optionStock from cart join portfolio.option on cart_optionNum = optionNum where cartNum=#{order.orderNum}
	</select>
	
	<insert id="addOrder" parameterType="kr.ajs.portfolio.vo.OrderVo" useGeneratedKeys="true" keyProperty="orderInfo.orderNum">
		insert into portfolio.order (orderSender, orderPw, orderSenderPostCode, orderSenderAddress, orderSenderDetailAddress, orderSenderExtraAddress, orderSenderTel, orderReceiver, orderReceiverPostCode, orderReceiverAddress, orderReceiverDetailAddress, orderReceiverExtraAddress, orderReceiverTel, orderTotalPrice, orderUserId)
		values(#{order.senderName}, #{order.noneMemberPassword}, #{order.sendPostcode}, #{order.sendAddress}, #{order.sendDetailAddress}, #{order.sendExtraAddress}, #{order.sendTel}, #{order.receiverName}, #{order.receivePostcode}, #{order.receiveAddress}, #{order.receiveDetailAddress}, #{order.receiveExtraAddress}, #{order.receiveTel}, #{order.totalPrice}, #{user.userId})
	</insert>
	<update id="updateStock">
		update portfolio.option set optionStock = #{stock} where optionNum = (select cart_optionNum from cart where cartNum = #{order.orderNum})
	</update>
	<insert id="addOrderList"> 
		insert into orderList (orderList_postNum, orderList_orderNum, orderList_optionNum, orderListCount, orderListPrice, orderListUsePoint, orderListPoint)
		values((select cart_postNum from cart where cartNum = #{order.orderNum}), #{index}, (select cart_optionNum from cart where cartNum = #{order.orderNum}), #{order.orderCount}, #{order.orderPrice}, #{order.orderUsePoint}, #{order.orderPoint})
	</insert>
	<update id="updateUserPoint">
		update user set userPoint = (select (userPoint-#{order.orderUsePoint}) where userId=#{user.userId}) where userId=#{user.userId}
	</update>
	<insert id="addGoodsViewOrderCart" parameterType="kr.ajs.portfolio.vo.CartVo" useGeneratedKeys="true" keyProperty="cart.cartNum">
		insert into cart (cart_postNum, cart_userId, cartCount, cart_optionNum)
		values ((select postNum from post join goods on goodsNum=postNum where goodsName = #{option.goods}), #{user.userId}, #{option.count}, 
		(select optionNum from portfolio.option join goods on goodsNum=option_goodsNum where goodsName = #{option.goods} and optionColor = #{option.color}))
	</insert>
	<delete id="deleteCart">
		delete from cart where cartNum = #{order.orderNum}
	</delete>
	<select id="getOrderList" resultType="kr.ajs.portfolio.vo.OrderVo">
		select orderNum, orderDate, orderState, orderUserId from portfolio.order
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (orderUserId like concat('%',#{cri.search},'%')
				or orderState like concat('%',#{cri.search},'%')
				or orderNum like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where orderNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where orderUserId like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 3">
				where orderState like concat('%',#{cri.search},'%')
			</if>
		</if>
		order by orderNum desc limit #{cri.pageStart}, #{cri.perPageNum};
	</select>
	<select id="getOrderGoodsCount" resultType="int">
		select count(*) from orderList where orderList_orderNum = #{order.orderNum}
	</select>
	<select id="getOrderGoodsName" resultType="String">
		select goodsName from orderList join portfolio.option on orderList_optionNum = optionNum join goods on goodsNum = option_goodsNum where orderList_orderNum = #{order.orderNum} limit 0,1
	</select>
	<select id="getOrderGoodsColor" resultType="String">
		select optionColor from orderList join portfolio.option on orderList_optionNum = optionNum where orderList_orderNum = #{order.orderNum} limit 0,1
	</select>
	<select id="getOrderGoodsList" resultType="kr.ajs.portfolio.vo.OrderListVo">
		select orderListNum, goodsName, goodsImg, optionColor, orderListPrice, orderListCount, orderListUsePoint, goodsType, orderListIsRecall
		from orderlist join portfolio.option on orderList_optionNum = optionNum join goods on option_goodsNum = goodsNum join portfolio.order on orderList_orderNum = orderNum
		where orderList_orderNum = #{orderNum} <if test="user.userAuth!='admin'"> and orderUserId = #{user.userId} </if>
	</select>
	<select id="getOrder" resultType="kr.ajs.portfolio.vo.OrderVo">
		select * from portfolio.order where orderNum = #{orderNum} <if test="user.userAuth!='admin'"> and orderUserId = #{user.userId} </if>
	</select>
	<select id="getOrderViewListTotalCount" resultType="int">
		select count(*) from portfolio.order
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (orderUserId like concat('%',#{cri.search},'%')
				or orderState like concat('%',#{cri.search},'%')
				or orderNum like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where orderNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where orderUserId like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 3">
				where orderState like concat('%',#{cri.search},'%')
			</if>
		</if>
	</select>
	<select id="getAllOrderCount" resultType="int">
		select count(*) from portfolio.order
	</select>
	<select id="getRecallOrderList" resultType="kr.ajs.portfolio.vo.OrderVo">
		<![CDATA[select orderNum, orderSender, orderReceiver, orderDate from portfolio.order
		where orderUserId = #{user.userId}
		and date(orderDate) >= date(subdate(now(), INTERVAL 14 DAY)) and date(orderDate) <= date(now())
		order by orderNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}]]>
	</select>
	<select id="getRecallOrderListCount" resultType="int">
		<![CDATA[select count(*) from portfolio.order
		where orderUserId = #{user.userId}
		and date(orderDate) >= date(subdate(now(), INTERVAL 14 DAY)) and date(orderDate) <= date(now())]]>
	</select>
	<select id="getuserPoint" resultType="int">
		select userPoint from user where userId = #{user.userId}
	</select>
	<select id="getOrderUserId" resultType="String">
		select orderUserId from portfolio.order where orderNum = #{orderNum}
	</select>
	<insert id="addRecall" parameterType="kr.ajs.portfolio.vo.RecallAddVo" useGeneratedKeys="true" keyProperty="recall.recallNum">
		insert into recall (recallReason, recallContent, recallIsChange, recallBankName, recallAccount)
		values (#{recall.recallReaseon}, #{recall.sandNote}, #{recall.recallChange}, #{recall.recallBank}, #{recall.recallAccount})
	</insert>
	<insert id="addRecallList">
		insert into recalllist (recallList_orderListNum, recallList_recallNum)
		values (#{recall.orderListNum}, #{recallNum})
	</insert>
	<update id="updateOrderListRecall">
		update orderlist set orderListIsRecall = 'Y' where orderListNum = #{recall.orderListNum}
	</update>
	<select id="getOrderRecallList" resultType="kr.ajs.portfolio.vo.OrderListVo">
		select orderListNum, goodsName, goodsImg, optionColor, orderListPrice, orderListCount, orderListUsePoint, goodsType, orderListIsRecall
		from orderlist join portfolio.option on orderList_optionNum = optionNum join goods on option_goodsNum = goodsNum join portfolio.order on orderList_orderNum = orderNum
		where orderList_orderNum = #{orderNum} and orderListIsRecall = 'N' and orderUserId = #{user.userId}
	</select>
	<select id="getBoardRecallList" resultType="kr.ajs.portfolio.vo.BoardRecallListVo">
		select recallNum, recallDate, recallState from recall
		join recalllist on recallNum = recallList_recallNum
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.order on orderList_orderNum = orderNum
		join portfolio.option on orderList_optionNum = optionNum
		join goods on option_goodsNum = goodsNum
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (recallNum like concat('%',#{cri.search},'%')
				or recallState like concat('%',#{cri.search},'%')
				or goodsName like concat('%',#{cri.search},'%')
				or optionColor like concat('%',#{cri.search},'%')
				or recallDate like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where recallNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where (goodsName like concat('%',#{cri.search},'%')
				or optionColor like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 3">
				where recallState like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 4">
				where recallDate like concat('%',#{cri.search},'%')
			</if>
		</if>
		group by recallNum
		order by recallNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getRecallGoodsName" resultType="String">
		select goodsName from recalllist
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.option on orderList_optionNum = optionNum
		join goods on option_goodsNum = goodsNum
		where recallList_recallNum = #{recallNum}
		limit 0,1
	</select>
	<select id="getRecallGoodsColor" resultType="String">
		select optionColor from recalllist
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.option on orderList_optionNum = optionNum
		where recallList_recallNum = #{recallNum}
		limit 0,1
	</select>
	<select id="getRecallGoodsCount" resultType="int">
		select count(*) from recalllist where recallList_recallNum = #{recallNum}
	</select>
	<select id="getRecallViewListCount" resultType="int">
		select count(DISTINCT recallNum) from recall
		join recalllist on recallNum = recallList_recallNum 
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.order on orderList_orderNum = orderNum
		join portfolio.option on orderList_optionNum = optionNum
		join goods on option_goodsNum = goodsNum
		<if test="user.userAuth!='admin'">
			where orderUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (recallNum like concat('%',#{cri.search},'%')
				or recallState like concat('%',#{cri.search},'%')
				or goodsName like concat('%',#{cri.search},'%')
				or optionColor like concat('%',#{cri.search},'%')
				or recallDate like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where recallNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where (goodsName like concat('%',#{cri.search},'%')
				or optionColor like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 3">
				where recallState like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 4">
				where recallDate like concat('%',#{cri.search},'%')
			</if>
		</if>
	</select>
	<select id="getRecallView" resultType="kr.ajs.portfolio.vo.RecallViewVo">
		select recallNum, recallReason, recallContent, recallIsChange, recallBankName, recallAccount, recallState, recallDate, orderNum 
		from recall
		join recalllist on recallNum = recallList_recallNum
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.order on orderList_orderNum = orderNum
		where recallNum = #{recallNum}
		group by recallNum
	</select>
	<select id="getRecallGoodsList" resultType="kr.ajs.portfolio.vo.RecallViewVo">
		select goodsImg, goodsName, optionColor, goodsType from recallList
		join orderlist on recallList_orderListNum = orderListNum
		join portfolio.option on orderList_optionNum = optionNum
		join goods on option_goodsNum = goodsNum
		where recallList_recallNum = #{recallNum}
	</select>
	<insert id="addAs">
		insert into portfolio.as (asTitle, asName, asTel, asContent, asUserId)
		values (#{as.title}, #{as.name}, #{as.tel}, #{as.sandNote}, #{user.userId})
	</insert>
		<select id="getAsViewListCount" resultType="int">
		select count(*) from portfolio.as
		<if test="user.userAuth!='admin'">
			where asUserId = #{user.userId}
		</if>
		
	</select>
	<select id="getAsViewList" resultType="kr.ajs.portfolio.vo.AsVo">
		select * from portfolio.as
		<if test="user.userAuth!='admin'">
			where asUserId = #{user.userId}
		</if>
		<if test="user.userAuth=='admin'">
			<if test="cri.type == 0">
				where (asNum like concat('%',#{cri.search},'%')
				or asDate like concat('%',#{cri.search},'%')
				or asState like concat('%',#{cri.search},'%')
				or asUserId like concat('%',#{cri.search},'%'))
			</if>
			<if test="cri.type == 1">
				where asNum like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 2">
				where asDate like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 3">
				where asState like concat('%',#{cri.search},'%')
			</if>
			<if test="cri.type == 4">
				where asUserId like concat('%',#{cri.search},'%')
			</if>
		</if>
		order by asNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getAsUser" resultType="String">
		select asUserId from portfolio.as where  asNum = #{asNum} and asUserId = #{user.userId}
	</select>
	<select id="getAs" resultType="kr.ajs.portfolio.vo.AsVo">
		select * from portfolio.as where asNum = #{asNum}
	</select>
	<select id="getNoticeListCount" resultType="int">
		select count(*) from notice
		<if test="cri.type == 0">
			where (noticeTitle like concat('%',#{cri.search},'%')
			or noticeDate like concat('%',#{cri.search},'%'))
		</if>
		<if test="cri.type == 1">
			where noticeTitle like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 2">
			where noticeDate like concat('%',#{cri.search},'%')
		</if>
		and noticeIsDel = 'N'
	</select>
	<select id="getNoticeList" resultType="kr.ajs.portfolio.vo.NoticeVo">
		select * from notice
		<if test="cri.type == 0">
			where (noticeTitle like concat('%',#{cri.search},'%')
			or noticeDate like concat('%',#{cri.search},'%'))
		</if>
		<if test="cri.type == 1">
			where noticeTitle like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 2">
			where noticeDate like concat('%',#{cri.search},'%')
		</if>
		and noticeIsDel = 'N'
		order by noticeNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getNotice" resultType="kr.ajs.portfolio.vo.NoticeVo">
		select * from notice where noticeNum=#{noticeNum}
	</select>
	<insert id="qaAdd" parameterType="kr.ajs.portfolio.vo.QaVo" useGeneratedKeys="true" keyProperty="qa.qaNum">
		insert into qa (qaTitle, qaWriter, qaIsOpen, qaPw, qaContent)
		values(#{qa.qaTitle}, #{qa.qaWriter}, #{qa.qaIsOpen}, #{qa.qaPw}, #{qa.qaContent})
	</insert>
	<update id="qaOriginNumAdd">
		update qa set qaOriginNum = #{qaNum} where qaNum=#{qaNum}
	</update>
	<select id="getQaCount" resultType="int">
		select count(*) from qa
		<if test="cri.type == 0">
			where (qaTitle like concat('%',#{cri.search},'%')
			or qaWriter like concat('%',#{cri.search},'%')
			or qaDate like concat('%',#{cri.search},'%'))
		</if>
		<if test="cri.type == 1">
			where qaTitle like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 2">
			where qaWriter like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 3">
			where qaDate like concat('%',#{cri.search},'%')
		</if>
		and qaIsDel = 'N'
	</select>
	<select id="getQaList" resultType="kr.ajs.portfolio.vo.QaVo">
		select * from qa
		<if test="cri.type == 0">
			where (qaTitle like concat('%',#{cri.search},'%')
			or qaWriter like concat('%',#{cri.search},'%')
			or qaDate like concat('%',#{cri.search},'%'))
		</if>
		<if test="cri.type == 1">
			where qaTitle like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 2">
			where qaWriter like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 3">
			where qaDate like concat('%',#{cri.search},'%')
		</if>
		and qaIsDel = 'N'
		order by qaOriginNum desc, qaNum asc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getQaPw" resultType="String">
		select qaPw from qa where qaNum = #{qaNum}
	</select>
	<select id="getQa" resultType="kr.ajs.portfolio.vo.QaVo">
		select * from qa where qaNum = #{qaNum}
	</select>
	<select id="getReviewCount" resultType="int">
		select count(*) from review where reviewIsDel = 'N'
	</select>
	<select id="getReviewList" resultType="kr.ajs.portfolio.vo.ReviewVo">
		select * from review
		where reviewIsDel = 'N'
		<if test="cri.type == 0">
			and (reviewTitle like concat('%',#{cri.search},'%')
			or review_userId like concat('%',#{cri.search},'%')
			or reviewDate like concat('%',#{cri.search},'%'))
		</if>
		<if test="cri.type == 1">
			and reviewTitle like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 2">
			and review_userId like concat('%',#{cri.search},'%')
		</if>
		<if test="cri.type == 3">
			and reviewDate like concat('%',#{cri.search},'%')
		</if>
		order by reviewNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getReviewOrderList" resultType="kr.ajs.portfolio.vo.OrderListVo">
		<![CDATA[select orderListNum, orderList_optionNum, goodsImg, goodsName, optionColor, orderDate
		from orderlist join portfolio.order on orderList_orderNum=orderNum
		join portfolio.option on orderList_optionNum = optionNum
		join goods on option_goodsNum = goodsNum
		where orderUserId = #{user.userId}
		and orderListIsRecall = 'N'
		and orderListIsReview = 'N'
		and date(orderDate) >= date(subdate(now(), INTERVAL 30 DAY)) and date(orderDate) <= date(now())
		group by orderList_optionNum
		order by orderListNum asc]]>
	</select>
	<insert id="reviewAdd">
		insert into review (review_userId, review_orderListNum, reviewTitle, reviewContent)
		values(#{user.userId}, #{review.review_orderListNum}, #{review.reviewTitle}, #{review.reviewContent})
	</insert>
	<update id="orderListIsReviewUpdate">
		update orderlist set orderListIsReview = 'Y' where orderlistNum=#{review.review_orderListNum}
	</update>
	<select id="getreview" resultType="kr.ajs.portfolio.vo.ReviewVo">
		select * from review
		where reviewNum = ${reviewNum}
		and reviewIsDel = 'N'
	</select>
	<update id="reviewModify">
		update review set reviewTitle = #{review.reviewTitle}, reviewContent=#{review.reviewContent} where reviewNum = #{review.reviewNum}
	</update>
	<update id="reviewDel">
		update review set reviewIsDel='Y', reviewDelDate=now() where reviewNum = #{review.reviewNum}
	</update>
	<update id="orderListIsReviewDel">
		update orderlist set orderListIsReview = 'N' where orderlistNum=(select review_orderListNum from review where reviewNum = #{review.reviewNum})
	</update>
	<select id="getNoticeMain" resultType="kr.ajs.portfolio.vo.NoticeVo">
		select * from notice order by noticeNum desc limit 0, 6
	</select>
	<select id="getSearchCount" resultType="int">
		select count(*) from goods
		join post on post_goodsNum = goodsNum
		where goodsName like concat('%',#{search.search},'%')
		and goodsPrice >= #{search.minPrice}
		<if test="search.maxPrice != 0">
			<![CDATA[and goodsPrice <= #{search.maxPrice}]]>
		</if>
		and postDiscount >= #{search.minDisCount}
		<if test="search.maxDisCount != 0">
			<![CDATA[and postDiscount <= #{search.maxDisCount}]]>
		</if>
	</select>
	<select id="getGoodsSearch" resultType="kr.ajs.portfolio.vo.SearchVo">
		select goodsNum, goodsImg, goodsName, goodsPrice from goods
		join post on post_goodsNum = goodsNum
		where goodsName like concat('%',#{search.search},'%')
		and goodsPrice >= #{search.minPrice}
		<if test="search.maxPrice != 0">
			<![CDATA[and goodsPrice <= #{search.maxPrice}]]>
		</if>
		and postDiscount >= #{search.minDisCount}
		<if test="search.maxDisCount != 0">
			<![CDATA[and postDiscount <= #{search.maxDisCount}]]>
		</if>
		order by goodsNum desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<update id="myPageUpdate">
		update user
		<trim prefix="SET" suffixOverrides=",">
			<if test="user.userPw!=''">userPw=#{user.userPw},</if>
			<if test="user.userMail!=''">userMail=#{user.userMail},</if>
		</trim>
		where userId = #{user.userId}
	</update>
	<update id="userDel">
		update user set userIsOut = 'Y', userOutDate = now() where userId = #{userId}
	</update>
	<select id="checkRefund" resultType="String">
		select recallIsChange from recall where recallNum = #{recallNum}
	</select>
	<update id="userPointRollBack">
		update user join portfolio.order on userId = orderUserId 
		join orderlist on orderList_orderNum = orderNum
		set userPoint = (userPoint+orderListUsePoint) where orderListNum = #{recall.orderListNum};
	</update>
	<select id="getSlideShowList" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select postNum, goodsImg from post join goods on post_goodsNum = goodsNum order by postNum desc limit 0, 4;
	</select>
	<select id="getLateView" resultType="kr.ajs.portfolio.vo.GoodsVo">
		select postNum, goodsImg from post join goods on post_goodsNum = goodsNum where postNum=#{postNum};
	</select>
	<select id="getCartToCartNum" resultType="kr.ajs.portfolio.vo.CartVo">
		select * from cart where cartNum = #{cartNum};
	</select>
	<select id="checkCart" resultType="kr.ajs.portfolio.vo.CartVo">
		select * from cart where cart_optionNum = #{optionNum} and cart_userId = #{user.userId}
	</select>
	<update id="updateCartUserId">
		update cart set cart_userId = #{user.userId} where cartNum = #{cart.cartNum}
	</update>
	<delete id="deleteCheckCart">
		delete from cart where cartNum = #{cart.cartNum}
	</delete>
	<select id="getNoneMemberOrder" resultType="kr.ajs.portfolio.vo.OrderVo">
		select * from portfolio.order where orderNum = #{order.orderNum}
	</select>
	<select id="getnonMemberOrderGoodsList" resultType="kr.ajs.portfolio.vo.OrderListVo">
		select orderListNum, goodsName, goodsImg, optionColor, orderListPrice, orderListCount, orderListUsePoint, goodsType, orderListIsRecall
		from orderlist join portfolio.option on orderList_optionNum = optionNum join goods on option_goodsNum = goodsNum join portfolio.order on orderList_orderNum = orderNum
		where orderList_orderNum = #{orderNum}
	</select>
</mapper>